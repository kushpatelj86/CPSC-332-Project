CREATE TABLE Professor (
    PROFESSOR_SOCIAL_SECURITY_NUMBER numeric(9) NOT NULL,
    PROFESSOR_FIRST_NAME VARCHAR(255),
    PROFESSOR_LAST_NAME VARCHAR(255),
    PROFESSOR_STREET_ADDRESS VARCHAR(255),
    PROFESSOR_CITY VARCHAR(255),
    PROFESSOR_STATE VARCHAR(255),
    PROFESSOR_ZIPCODE numeric(5),
    PROFESSOR_TELEPHONE_NUMBER numeric(7),
    PROFESSOR_AREA_CODE INTEGER,
    PROFESSOR_SEX ENUM('Male', 'Female') NOT NULL,
    PROFESSOR_TITLE VARCHAR(255),
    PROFESSOR_SALARY INTEGER,
    PRIMARY KEY(PROFESSOR_SOCIAL_SECURITY_NUMBER)
);



CREATE TABLE DEPARTMENT(

    DEPARTMENT_UNIQUE_NUMBER INTEGER NOT NULL,
    DEPARTMENT_NAME VARCHAR(255),
    DEPARTMENT_TELEPHONE_NUMBER numeric(7),
    DEPARTMENT_AREA_CODE INTEGER,
    DEPARTMENT_OFFICE_LOCATION VARCHAR(255),
    CHAIR_PERSON_SSN numeric(9) NOT NULL
    PRIMARY KEY(DEPARTMENT_UNIQUE_NUMBER),
    FOREIGN KEY (CHAIR_PERSON_SSN) REFERENCES Professor(PROFESSOR_SOCIAL_SECURITY_NUMBER)
);

CREATE TABLE COURSE (
    COURSE_UNIQUE_NUMBER INTEGER NOT NULL,
    COURSE_TITLE VARCHAR(255),
    COURSE_TEXTBOOK VARCHAR(255),
    COURSE_UNITS INTEGER NOT NULL,
    COURSE_DEPARTMENT_NUM INTEGER NOT NULL,
    PRIMARY KEY(COURSE_UNIQUE_NUMBER),
    FOREIGN KEY(COURSE_DEPARTMENT_NUM) REFERENCES DEPARTMENT(DEPARTMENT_UNIQUE_NUMBER)
);


CREATE TABLE COURSE_SECTION (
    COURSE_SECTION_UNIQUE_NUMBER INTEGER NOT NULL,
    COURSE_SECTION_CLASSROOM varchar(255),
    COURSE_SECTION_NUMSEATS INTEGER NOT NULL,
    COURSE_SECTION_MEETING_DAYS varchar(255),
    COURSE_SECTION_START_TIME varchar(255),
    COURSE_SECTION_END_TIME varchar(255),
    COURSE_SECTION_COURSE_UNIQUE_NUMBER INTEGER NOT NULL,
    COURSE_SECTION_PROFESSOR_SNN numeric(9) NOT NULL,
    PRIMARY KEY(COURSE_SECTION_UNIQUE_NUMBER),
    FOREIGN KEY(COURSE_SECTION_COURSE_UNIQUE_NUMBER) REFERENCES COURSE(COURSE_UNIQUE_NUMBER)
    FOREIGN KEY(COURSE_SECTION_PROFESSOR_SNN) REFERENCES COURSE(PROFESSOR_SOCIAL_SECURITY_NUMBER)


);

CREATE TABLE STUDENT (
    STUDENT_CWID numeric(9) NOT NULL,
    STUDENT_FIRST_NAME varchar(225),
    STUDENT_LAST_NAME varchar(225),
    STUDENT_STREET_ADDRESS VARCHAR(255),
    STUDENT_CITY VARCHAR(255),
    STUDENT_STATE VARCHAR(255),
    STUDENT_ZIPCODE numeric(5),
    STUDENT_TELEPHONE_NUMBER numeric(7),
    STUDENT_AREA_CODE INTEGER,
    STUDENT_SEX ENUM('Male', 'Female') NOT NULL,
    STUDENT_MAJOR INTEGER NOT NULL
    PRIMARY KEY(STUDENT_CWID),
    FOREIGN KEY (STUDENT_MAJOR) REFERENCES Department(DEPARTMENT_UNIQUE_NUMBER)
);



CREATE TABLE ENROLLMENT_RECORD(
    ENROLLMENT_RECORD_UNIQUE_NUMBER INTEGER NOT NULL,
    ENROLLMENT_RECORD_STUDENT_CWID numeric(9) NOT NULL,
    ENROLLMENT_RECORD_COURSE_SECTION_NUMBER INTEGER NOT NULL,
    ENROLLMENT_RECORD_GRADE varchar(255),
    PRIMARY KEY(ENROLLMENT_RECORD_UNIQUE_NUMBER),
    FOREIGN KEY (ENROLLMENT_RECORD_STUDENT_CWID) REFERENCES STUDENT(STUDENT_CWID),
    FOREIGN KEY (ENROLLMENT_RECORD_COURSE_SECTION_NUMBER) REFERENCES COURSE_SECTION(COURSE_SECTION_UNIQUE_NUMBER)





)






CREATE TABLE MINOR (
    MINOR_DEPARTMENT_UNIQUE_NUMBER INTEGER NOT NULL,
    MINOR_STUDENTS_CWID numeric(9) NOT NULL,
    PRIMARY KEY(MINOR_DEPARTMENT_UNIQUE_NUMBER),
    FOREIGN KEY(MINOR_DEPARTMENT_UNIQUE_NUMBER) REFERENCES Department(DEPARTMENT_UNIQUE_NUMBER),
    FOREIGN KEY(MINOR_STUDENTS_CWID) REFERENCES STUDENT(STUDENT_CWID)

);


CREATE TABLE PREREQUISITE(
    PREREQUISITE_COURSE_UNIQUE_NUMBER INTEGER NOT NULL,
    PRIMARY KEY (PREREQUISITE_COURSE_UNIQUE_NUMBER),
    FOREIGN KEY (PREREQUISITE_COURSE_UNIQUE_NUMBER) REFERENCES Course(COURSE_UNIQUE_NUMBER)

);


CREATE TABLE PROFESSOR_COLLEGE_DEGREES(
    PROFESSOR_COLLEGE_DEGREE varchar(255),
    DEPARTMENT_PROFESSOR_SSN numeric(9) NOT NULL,
    PROFESSOR_COLLEGE_DATE_AWARDED varchar(255),
    PRIMARY KEY(PROFESSOR_COLLEGE_DEGREE),
    FOREIGN KEY(DEPARTMENT_PROFESSOR_SSN) REFERENCES Professor(PROFESSOR_SOCIAL_SECURITY_NUMBER)

);





